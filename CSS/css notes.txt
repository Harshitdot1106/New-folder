for style first we have the style= "css property : value;another property : value"
there are different types of selctors like id class
ID is represented by #id name 
class is represented by .class nanme 
Here are the main components of the CSS box model:
Content: The actual content of the HTML element, such as text, images, or videos.
  The size of the content can be controlled using the height and width properties.
Padding: The space between the content and the border of the element.
 Padding can be set for all sides or for each side individually.
 The background color set for the content also applies to the padding area
Border: The border that surrounds the content and padding.
 Borders can be set for all sides or for each side individually
 Borders can be styled with various properties such as color, width, and style.
Margin: The space between the border of the element and the adjacent elements.
  Margins can be set for all sides or for each side individually.
 The background color set for the content does not apply to the margin area.
 Margins for two elements can overlap, and collapses to the larger value and they        dont apply to span 
 MArgin syntax   margin:top right bottom left ;
so as to avoid the img to strech we can use object fit cover
to show two divs side by side we use display:flex
Here are some of the most commonly used text styling properties in CSS:

font-family: This property sets the font family for the selected text. It specifies the name of one or more font families to use for the text. E.g. font-family: Arial, sans-serif;. CSS provides several in-built fonts: https://www.w3schools.com/cssref/css_websafe_fonts.php

font-size: This property sets the font size for the selected text. It specifies the size of the font in pixels, ems, or other units. E.g. font-size: 36px;

font-weight: This property sets the weight (boldness) of the selected text. It specifies the weight of the font as a number or a keyword. E.g. font-weight: bold;

text-align: This property sets the horizontal alignment of the selected text. It specifies the alignment of the text as left, right, center, or justified. E.g. text-align: center;

line-height: This property sets the height of each line of text. It specifies the height of the line as a number or a percentage of the font size. E.g. line-height: 1.5;

font-style: This property sets the style of the font for the selected text. It specifies whether the font should be italic, oblique, or normal (default). E.g. font-style: italic;

text-transform: This property sets the capitalization of the selected text. It specifies whether the text should be transformed to uppercase, lowercase, or capitalize (first letter of each word capitalized). E.g. text-transform: uppercase;

text-decoration: This property sets the decoration of the selected text. It specifies whether the text should be underlined, overlined, line-through, or none (default). E.g. text-decoration: underline;
color: sets the color of text
background-color: sets the background color of an element
border-color: sets the color of an element's border
box-shadow: sets the color of an element's shadow
text-shadow: sets the color of text shadow
The CSS display property determines how an element is displayed on the web page. It controls the layout and rendering of the element in various ways. Here are some commonly used display options:
display: block; - The element creates a block-level box, taking up the full width available and generating a new line before and after itself.
display: inline; - The element creates an inline-level box that doesn't break the flow of text and only takes up as much width as necessary.
display: inline-block; - The element creates a block-level box that can be placed inline with other elements and respects width and height properties.
display: flex; - The element becomes a flex container, allowing its children to be laid out as flexible boxes.we can also vary the direction of flex like row,row-reverse
display: none; - The element is removed from the rendering tree, making it invisible and not taking up any space in the layout.
there are various funtions of flex:
   The flex-direction property of a container sets the primary axis along which flex items are arranged within a flex container. It supports the following options:
   row: Flex items are laid out horizontally, in the order they appear in the source code (default).
    row-reverse: Flex items are laid out horizontally, in the reverse order of their appearance in the source code.
    column: Flex items are laid out vertically, in the order they appear in the source code.
    column-reverse: Flex items are laid out vertically, in the reverse order of their appearance in the source code.
    The 'flex-wrap' property of a container controls whether flex items should wrap onto multiple lines or be forced onto a single line within a flex container.It supports the following options:
    nowrap: Flex items are forced onto a single line, potentially causing overflow (default).
    wrap: Flex items wrap onto multiple lines when the container width is not sufficient to accommodate them.
    wrap-reverse: Flex items wrap onto multiple lines in the reverse order when the container width is not sufficient to accommodate them.
